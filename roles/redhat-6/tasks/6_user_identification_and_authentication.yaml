---

############################
# Secure Authentication 
############################

# init file
  - name: Verify single user mode in sysconfig-init
    shell: 'grep SINGLE=/sbin/sulogin /etc/sysconfig/init'
    register: presence01
    ignore_errors: true


  - name: Confirm single user mode in sysconfig-init
    debug:
      msg: "Single user mode is enabled."
    when: presence01.rc == 0


  - name: Configure single user mode in sysconfig-init
    lineinfile:
      path: /etc/sysconfig/init
      regexp: '^SINGLE[=|a-z]*'
      line: SINGLE=/sbin/sulogin
      state: present
    when: presence01.rc != 0
    register: config01


# host based authentication on SSH
  - name: Disable host based authentication on SSH
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '[#|\s]*HostbasedAuthentication\s+[yes|no]'
      line: HostbasedAuthentication no
      state: present


# Enabling bootloader password
  - name: Inject grub password script
    copy:
      src: custom_scripts/custom-grub-password
      dest: /usr/bin
      mode: 'u+x'
      owner: root
      group: root


####################
# Account Password
###################

#     - name: Update the system-auth and password-auth files
#       shell: "{{ scripts_dir }}/auth-changer.sh"
#       # we need to modify scripts further
#       ignore_errors: true
#       tags:
#         - never
#         - recommend


# minimum user password days
  - name: Configure minimum user password days
    lineinfile:
      path: /etc/login.defs
      regexp: '[#|\s]*PASS_MIN_DAYS[\s|\t]+[0-9]*'
      line: "PASS_MIN_DAYS {{ password_min_day }}"
      state: present
    register: passconfig01


  - name: Apply minimum user password days to existing user accounts
    shell: "{{ scripts_dir }}/useraccount_chage_min_days.sh {{ password_min_day }}"


  - name: Verify password change on past days
    shell: "{{ scripts_dir }}/password_change_date_verify.sh"
    register: passwdverify01
    ignore_errors: true


#     - name: Display password change not applied account
#       debug:
#         var: passwdverify01



# minimum expiration warning days
  - name: Configure minimum password warning days
    lineinfile:
      path: /etc/login.defs
      regexp: '[#|\s]*PASS_WARN_AGE[\s|\t]+[0-9]*'
      line: "PASS_WARN_AGE {{ password_warn_day }}"
      state: present
    register: passconfig02


  - name: Apply minimum warn days to existing user accounts
    shell: "{{ scripts_dir }}/useraccount_chage_warn_days.sh {{ password_warn_day }}"


  - name: Apply inactive days for accounts
    shell: "{{ scripts_dir }}/useraccount_inactive_days.sh {{ account_inactive_days }}"


#empty password
  - name: Configure empty password blocking on SSH
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '[#|\s]*PermitEmptyPasswords\s+[yes|no]'
      line: PermitEmptyPasswords no
      state: present


# Client-alive interval on SSH 
  - name: Configure client alive interval on SSH 
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '[#|\s]*ClientAliveInterval[\s|\t]+[0-9]*'
      line: "ClientAliveInterval  {{ client_alive_interval }}"
      state: present


# Client-alive count max on SSH 
  - name: Configure client-alive count max on SSH 
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '[#|\s]*ClientAliveCountMax[\s|\t]+[0-9]*'
      line: "ClientAliveCountMax  {{ client_alive_count }}"
      state: present


  - name: Reload the SSH service with configuration
    shell: "service {{ item }} reload"
    args:
      warn: false
    with_items:
      - sshd

